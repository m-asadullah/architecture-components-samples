/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.kotlin.allopen)
    alias(libs.plugins.androidx.navigation.safeargs)
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.android.example.github.testing.OpenClass'
}
android {
    namespace 'com.android.example.github'
    compileSdkVersion libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.android.example.github"
        minSdkVersion libs.versions.minSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.android.example.github.util.GithubTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            enableUnitTestCoverage = true
            enableAndroidTestCoverage = true
        }
    }
    buildFeatures {
        dataBinding = true
        //navigation = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    sourceSets {
       androidTest.java.srcDirs += "src/test-common/java"
       test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
        disable 'InvalidPackage'
        lintConfig file('lint.xml')
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.androidx.cardview
    implementation libs.google.android.material
    implementation libs.androidx.core.ktx
    implementation libs.androidx.transition

    implementation libs.androidx.fragment.testing
    implementation libs.androidx.test.core

    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.room.runtime
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.common.java8
    implementation libs.squareup.retrofit2.retrofit
    implementation libs.squareup.retrofit2.converter.gson
    implementation libs.github.bumptech.glide
    implementation libs.github.bumptech.glide.annotations
    kapt libs.github.bumptech.glide.compiler

    implementation libs.google.dagger
    kapt libs.google.dagger.compiler

    implementation libs.google.dagger.android
    implementation libs.google.dagger.android.support
    kapt libs.google.dagger.android.processor

    implementation libs.androidx.constraintlayout
    implementation libs.jetbrains.kotlin.stdlib.jdk7

    implementation libs.jakewharton.timber

    kapt libs.androidx.room.compiler
    kapt libs.androidx.lifecycle.compiler

    testImplementation libs.androidx.test.core
    testImplementation libs.junit
    testImplementation libs.squareup.okhttp3.mockwebserver
    testImplementation libs.androidx.arch.core.testing
    testImplementation libs.mockito.core

    androidTestImplementation libs.androidx.test.core
    androidTestImplementation libs.androidx.test.ext.junit.ktx
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules

    androidTestImplementation libs.androidx.appcompat
    androidTestImplementation libs.androidx.recyclerview
    androidTestImplementation libs.androidx.cardview
    androidTestImplementation libs.google.android.material

    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.espresso.contrib

    androidTestImplementation libs.androidx.arch.core.testing
    androidTestImplementation libs.mockito.core
    androidTestImplementation libs.mockito.android
}

// we need all open to run tests which we enable only for debug builds.
project.tasks.configureEach {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}
