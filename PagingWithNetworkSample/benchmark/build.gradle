plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.androidx.benchmark)
}

android {
    namespace "com.example.benchmark"
    compileSdkVersion libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        testInstrumentationRunnerArguments mode: 'none'
        minSdkVersion libs.versions.minSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"

        // Set this argument to capture profiling information, instead of measuring performance.
        // Can be one of:
        //   * None
        //   * Sampled
        //   * Method
        // See full descriptions of available options at: d.android.com/benchmark#profiling
    }

    testBuildType = "release"

    buildTypes {
        release {
            isDefault = true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'benchmark-proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':lib')
    
    implementation libs.androidx.appcompat
    implementation libs.androidx.paging.runtime

    androidTestImplementation libs.androidx.test.ext.junit.ktx
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.arch.core.testing
    androidTestImplementation libs.androidx.benchmark.junit4
    androidTestImplementation libs.junit
}
